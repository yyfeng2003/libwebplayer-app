//Const.js

var UP = 0;
var DOWN = 1;
var LEFT = 2;
var RIGHT = 3;

var foodLife = 0;
var foodTime = 1;
var foodHome = 2;
var foodBomb = 3;
var foodStar = 4;
var foodGod = 5;
var foodNon = 6;

var offerX = 32;
var offerY = 16;

var NON = 0;
var WALL = 1;
var GRID = 2;
var GRASS = 3;
var WATER = 4;
var ICE = 5;
var HOME = 9;
var DIE = 10;


var STATE_INIT = 1; 
var STATE_PLAY = 2;
var STATE_STAGE_INIT = 3;  
var STATE_GAMEOVER = 4; 
var STATE_SELECT = 5; 
var STATE_GAMESTART = 6; 


var K_UP = 38;
var K_DOWN = 40;
var K_RIGHT = 39;
var K_LEFT = 37;

var K_SPACE = 32;
var K_TAB = 9;
var K_ENTER = 13;
var K_CTRL = 17;
var K_ALT = 18;

var K_0 = 48;
var K_1 = 49;
var K_2 = 50;
var K_3 = 51;
var K_4 = 52;
var K_5 = 53;
var K_6 = 54;
var K_7 = 55;
var K_8 = 56;
var K_9 = 57;
var K_A = 65;
var K_B = 66;
var K_C = 67;
var K_D = 68;
var K_E = 69;
var K_F = 70;
var K_G = 71;
var K_H = 72;
var K_I = 73;
var K_J = 74;
var K_K = 75;
var K_L = 76;
var K_M = 77;
var K_N = 78;
var K_O = 79;
var K_P = 80;
var K_Q = 81;
var K_R = 82;
var K_S = 83;
var K_T = 84;
var K_U = 85;
var K_V = 86;
var K_W = 87;
var K_X = 88;
var K_Y = 89;
var K_Z = 90;

//+ouley
K_SPACE = 13;


var images = new Array();

images["home"] = [256,0];
images["map"] = [0,96];
images["tankNum"] = [0,112];
images["myTank"] = [0,0];
images["myTank2"] = [128,0];
images["tank1"] = [0,32];
images["tank2"] = [128,32];
images["tank3"] = [0,64];
images["tankRun"] = [128,96];
images["hitFx"] = [320,0];
images["bombFx"] = [0,160];
images["bullet"] = [80,96];
images["tankStart"] = [256,32];
images["food"] = [256,110];
images["score"] = [192,96];
images["num"] = [256,96];
images["shield"] = [160,96];
images["stageStart"] = [396,96];
images["gameOver"] = [384,64];


function GameStart()
{
	this.x = 0;
	this.y = 512;	
}


GameStart.prototype.draw = function()
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");

	myCanvas.dirty = true;

	if(this.y == 512)
	{
		graphics.fillStyle = "#000";
		graphics.fillRect(0, 0, 512, 448);
	}

	var imgStart = document.getElementById("menu");
	graphics.drawImage(imgStart, this.x, this.y, 512, 448);
	
	if(this.y <= 0) 
	{
		this.y = 0;
		graphics.drawImage(imgStart, this.x, this.y, 512, 448);
		gameState = STATE_SELECT;
		this.init();
	}
	
	this.y -= 5;
};

GameStart.prototype.init = function()
{
	this.y = 512;

	//+ouley
	hn.gui.pushLayer("menu");
};



function TankRun()
{
	this.x = 128;
	this.time = 0;
	
	this.num = 0;
	this.ys = [248, 280, 312];
}

TankRun.prototype.draw = function()
{
	var myCanvas = document.getElementById("stage");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	this.time ++;
	var temp;
	
	if( parseInt(this.time / 6) % 2 == 0)
	{
		temp = 0;
	}
	else
	{
		temp = 27;
	}
	graphics.drawImage(img, images["tankRun"][0],images["tankRun"][1] + temp, 27,27, this.x, this.ys[this.num], 27, 27 );

	myCanvas.dirty = true;
};

TankRun.prototype.init = function()
{
	
	var myCanvas = document.getElementById("stage");
	var graphics = myCanvas.getContext("2d");
	graphics.clearRect(this.x, this.ys[this.num], 27, 27);
	
	this.time = 0;
	this.num = 0;

	myCanvas.dirty = true;
};

TankRun.prototype.next = function(n)
{
	var myCanvas = document.getElementById("stage");
	var graphics = myCanvas.getContext("2d");
	
	graphics.clearRect(this.x, this.ys[this.num], 27, 27);

	myCanvas.dirty = true;
	
	if(n == 1) 
	{
		if(this.num == 1) 
		{
			this.num = 0;
			return;
		}
		this.num ++;
	}
	else 
	{
		if(this.num == 0) 
		{
			this.num = 1;
			return;
		}
		this.num --;
	}
};



function GameOver()
{
	this.x = 210;
	this.y = 512;	
}


GameOver.prototype.draw = function()
{
	var myCanvas = document.getElementById("stage");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.clearRect(this.x, this.y + 2, 62, 30);
	graphics.drawImage(img, images["gameOver"][0],images["gameOver"][1], 62, 30, this.x, this.y, 62, 30);
	
	if(this.y <= 100) 
	{
		gameState = STATE_GAMESTART;
		graphics.clearRect(this.x, this.y, 62, 30);
		this.init();
	}
	
	this.y -= 2;

	myCanvas.dirty = true;
};

GameOver.prototype.init = function()
{
	this.y = 512;
};


//Sound.js

function Sound()
{
	
}


Sound.prototype.play = function(name)
{
	var ss = document.getElementById(name);
	ss.play();
};




//Map.js

function selectMap(level)
{
	var i,j;
	
	level = level % 21;
	if(level == 0) {level = 21;}
	
	var tempMap = this["map" + level];
	
	for (i = 0; i < 26; i++ )
	{
			for (j = 0; j < 26; j++ )
			{
				map[i][j] =tempMap[i][j];
			}
	}
}	

function drawMap()
{
	var myCanvas = document.getElementById("wall");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.fillStyle = "#7f7f7f";
	graphics.fillRect(0,0,512,448);
	graphics.fillStyle = "#000";
	graphics.fillRect(offerX,offerY,416,416);
	
	var mapx = images["map"][0];
	var mapy = images["map"][1];
	var homex = images["home"][0];
	var homey = images["home"][1];
	
	for(var i=0;i<26;i++)
	{
		for(var j=0;j<26;j++)
		{
			if(map[i][j]==WALL) 
			{
				graphics.drawImage(img,mapx, mapy,16,16,j*16 + offerX, i*16 + offerY,16,16) ;
			}
			else if(map[i][j]==GRID) 
			{
				graphics.drawImage(img,16 + mapx, mapy,16,16,j*16 + offerX, i*16 + offerY,16,16) ;
			}
			else if(map[i][j]==WATER)
			{
				graphics.drawImage(img,48 + mapx, mapy,16,16,j*16 + offerX, i*16 + offerY,16,16) ;
			}
			else if(map[i][j]==ICE) 
			{
				graphics.drawImage(img,64 + mapx, mapy,16,16,j*16 + offerX, i*16 + offerY,16,16) ;
			}
			else if(map[i][j]==HOME)
			{
				graphics.drawImage(img,0 + homex, homey, 32, 32, j*16 + offerX, i*16 + offerY, 32, 32) ;
			}
			else if(map[i][j]==10)
			{
				graphics.drawImage(img, 0 + mapx, mapy, 16, 8, j*16 + offerX, i*16 + offerY, 16, 8) ;
			}
			else if(map[i][j]==11)
			{
				graphics.drawImage(img, 0 + mapx, 8 + mapy, 16, 8, j*16 + offerX,i*16+8 + offerY, 16, 8) ;
			}
			else if(map[i][j]==12)
			{
				graphics.drawImage(img, 0 + mapx, mapy, 8,16, j*16 + offerX, i*16 + offerY, 8, 16) ;
			}
			else if(map[i][j]==13)
			{
				graphics.drawImage(img, 8 + mapx, mapy, 8, 16, j*16+8 + offerX, i*16 + offerY, 8, 16) ;
			}
			else if(map[i][j]==88)
			{
				graphics.drawImage(img, 32 + mapx, mapy, 32, 32, j*16 + offerX, i*16 + offerY, 32, 32) ;
			}
		}
	}

	myCanvas.dirty = true;
}

function drawGrass()
{
	var myCanvas = document.getElementById("grass");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.clearRect(0 , 0, 512, 448);
	
	for(var i=0;i<26;i++)
	{
		for(var j=0;j<26;j++)
		{
			if(map[i][j]==GRASS)
			{
				graphics.drawImage(img,32 + images["map"][0], 0 + images["map"][1], 16, 16, j*16 + offerX, i*16 + offerY, 16, 16) ;
			}
		}
	}

	myCanvas.dirty = true;
}



//MapLevel.js

var map = 
[
	[0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0],
	[3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2],
	[3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2],
	[3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0],
	[3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0],
	[0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0],
	[0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0],
	[0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0],
	[2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,9,8,1,0,0,0,1,1,1,1,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,8,8,1,0,0,0,1,1,1,1,1,1,0,0],
];

var map1 = 
[
	[0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,2,2,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0],
	[3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2],
	[3,3,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,3,3,1,1,2,2],
	[3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0],
	[3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,3,3,0,0,0,0],
	[0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0],
	[0,0,1,1,1,1,1,1,3,3,3,3,3,3,2,2,0,0,0,0,3,3,1,1,0,0],
	[0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,2,2,3,3,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0],
	[2,2,1,1,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,2,2,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,9,8,1,0,0,0,1,1,1,1,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,8,8,1,0,0,0,1,1,1,1,1,1,0,0],
];

var map2 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,2,2,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,2,2,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1],
	[2,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,2,2],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0],
];
var map3 = 
[
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2],
	[0,0,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[1,1,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[1,1,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0],
	[3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,0],
	[3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,1,0,0],
	[3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0],
	[3,3,3,3,3,3,3,3,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],
	[3,3,3,3,3,3,3,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0],
	[3,3,3,3,3,3,3,3,0,0,0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0],
	[0,0,3,3,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0],
	[0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3],
	[1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3],
	[1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,3,3,3,3,3,3,3,3],
	[1,1,0,0,0,0,2,0,0,0,0,0,0,0,1,1,1,1,3,3,3,3,3,3,0,0],
	[1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[1,1,1,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[1,1,1,1,0,0,2,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,3,3,0,0],
	[2,2,1,1,1,1,0,0,0,0,0,1,9,8,1,0,0,0,1,1,0,0,0,0,0,0],
	[2,2,1,1,1,1,0,0,0,0,0,1,8,8,1,0,0,0,1,1,0,0,0,0,0,0],
];

var map4 = 
[
	[0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0],
	[0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0],
	[3,3,3,3,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3],
	[3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,3,3],
	[3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2,2],
	[3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
	[2,2,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
	[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
	[0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0],
	[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0],
	[4,4,0,0,0,1,0,0,2,0,0,0,2,0,0,0,1,1,1,0,0,0,0,0,0,0],
	[4,4,0,0,0,1,0,0,2,0,0,0,2,0,0,0,1,1,1,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,4,4,4,4],
	[0,0,0,0,1,1,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,4,4,4,4],
	[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
	[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],
	[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0],
	[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
	[0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,3,3],
	[0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,3,3],
	[3,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,3,3],
	[3,3,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,3,3,3,3],
	[2,2,3,3,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,3,3,3,3,2,2],
	[2,2,3,3,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,3,3,3,3,2,0],
];

var map5 = 
[
	[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0],
	[2,2,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0],
	[2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[2,2,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
	[1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,4,4,4,4,0,0,4,4],
	[1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,4,4,4,4,0,0,4,4],
	[1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,4,4,4,4,0,0,4,4,4,4,4,4,0,0,1,1,1,1],
	[0,0,0,0,0,0,0,0,4,4,4,4,0,0,4,4,4,4,4,4,0,0,1,1,1,1],
	[0,0,0,0,1,1,0,0,4,4,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
	[1,1,1,1,0,0,0,0,4,4,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0],
	[0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0],
	[4,4,4,4,4,4,0,0,4,4,0,0,2,2,0,0,1,1,0,0,0,2,0,0,0,0],
	[4,4,4,4,4,4,0,0,4,4,0,0,2,2,0,0,1,1,0,0,0,2,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1],
	[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1],
	[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
	[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0],
	[1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0],
	[1,1,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0],
];



var map6 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,0,0,0,0,0,0],
	[0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,3,3,1,0,0,1,3,3],
	[0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0,0,1,3,3,1,0,0,1,3,3],
	[0,0,1,0,0,2,0,0,1,0,0,0,1,1,0,0,0,1,3,3,1,0,0,1,3,3],
	[0,0,1,0,0,2,0,0,1,0,0,0,1,1,0,0,0,1,3,3,1,0,0,1,3,3],
	[0,0,1,1,0,0,0,0,1,1,0,0,2,2,0,0,1,1,3,3,0,0,1,1,3,3],
	[0,0,1,1,0,0,0,0,1,1,0,0,2,2,0,0,1,1,3,3,0,0,1,1,3,3],
	[0,0,0,0,0,0,0,1,2,2,0,0,1,1,0,0,1,1,2,0,0,0,3,3,3,3],
	[0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,2,0,0,0,3,3,3,3],
	[1,1,1,1,1,0,0,0,0,0,3,3,1,1,3,3,0,0,0,0,0,1,1,1,1,1],
	[1,1,1,1,1,0,0,0,0,0,3,3,1,1,3,3,0,0,0,0,0,1,1,1,1,1],
	[0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0,0,0,0,0,0],
	[2,2,1,1,1,1,0,0,1,1,3,3,3,3,3,3,1,1,0,1,1,1,1,1,2,2],
	[2,2,1,1,1,1,0,0,0,0,3,3,3,3,3,3,0,0,0,1,1,1,1,1,2,2],
	[2,2,2,2,2,2,0,0,0,0,0,0,3,3,0,0,0,0,0,0,2,2,2,2,2,2],
	[0,0,0,0,0,0,0,0,1,1,0,0,3,3,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,1,3,3],
	[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,3,3],
	[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,3,3,3,3],
	[0,0,0,0,1,1,0,0,0,0,0,1,8,8,1,0,0,0,0,0,1,1,3,3,3,3],
];

var map7 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,2,2,0,0,0,0],
	[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0],
	[0,0,0,0,2,2,0,0,0,0,0,0,3,3,0,0,2,2,2,2,2,2,0,0,0,0],
	[0,0,0,0,2,2,0,0,0,0,0,0,3,3,0,0,0,0,2,2,2,2,0,0,0,0],
	[0,0,2,2,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,0,2,2,0,0,0,0],
	[0,0,2,2,0,0,0,0,0,0,3,3,2,2,0,0,0,0,0,0,2,2,0,0,0,0],
	[0,0,0,0,0,0,0,0,3,3,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0],
	[0,0,0,0,0,0,0,0,3,3,2,2,2,2,0,0,0,0,0,0,0,0,2,2,0,0],
	[0,0,2,2,0,0,3,3,2,2,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0,0],
	[0,0,2,2,0,0,3,3,2,2,2,2,2,2,0,0,2,2,0,0,0,0,0,0,0,0],
	[0,0,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0],
	[0,0,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0],
	[2,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,2,2,0,0,0,0,0,2,0,0],
	[2,0,0,0,0,0,0,0,2,2,0,0,2,2,2,2,2,2,0,0,0,0,0,2,0,0],
	[0,0,0,2,2,2,0,0,0,0,0,0,2,2,2,2,3,3,0,0,0,0,2,2,0,0],
	[0,0,0,2,2,2,0,0,0,0,0,0,2,2,2,2,3,3,0,0,0,0,2,2,0,0],
	[0,0,2,2,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,2,2,2,2,0,0],
	[0,0,2,2,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0,2,2,2,2,0,0],
	[0,0,2,2,2,2,2,2,0,0,0,0,3,3,0,0,0,0,2,2,0,0,0,0,0,0],
	[0,0,0,0,0,0,2,2,0,0,0,0,3,3,0,0,0,0,2,2,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2],
	[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,2,2,2,2],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[2,2,2,2,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0],
];


var map8 = 
[
	[0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0],
	[3,3,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0],
	[3,3,1,1,1,1,1,1,0,0,1,1,0,0,2,2,0,0,1,1,1,0,0,0,0,0],
	[3,3,3,3,3,3,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0],
	[3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0],
	[3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4],
	[3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4],
	[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2],
	[0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0],
	[1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,3,3,1,1,0,0,0,0,1,1],
	[1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,3,3,1,1,2,2,2,2,1,1],
	[0,0,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0],
	[0,0,0,0,0,0,2,2,0,0,2,2,0,0,3,3,3,3,3,3,3,3,0,0,0,0],
	[4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4],
	[4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4],
	[3,3,3,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[3,3,3,3,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],
	[3,3,3,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0],
	[3,3,3,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,2,2,1,1,1,1,0,0],
	[3,3,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[3,3,2,2,1,1,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,1,1,0,0,0,0,0,0],
];

var map9 = 
[
	[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0],
	[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,0,0,0],
	[1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,2,2,2,2,0,0,0,1,1],
	[1,1,0,0,0,0,0,0,0,0,0,0,2,2,3,3,0,2,2,2,2,0,0,0,1,1],
	[0,0,0,0,0,0,0,0,3,3,0,2,2,2,2,0,0,0,2,2,3,3,0,0,0,0],
	[0,0,0,0,0,0,2,2,3,3,0,2,2,2,2,0,0,0,0,0,3,3,0,0,0,0],
	[0,0,0,0,0,2,2,2,2,0,0,0,2,2,3,3,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,2,2,2,2,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,2,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,3,3,0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,0,0],
	[0,0,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,0,0],
	[2,2,1,1,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,3,3,2,2],
	[2,2,1,1,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,3,3,2,2],
	[0,0,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,0,0],
	[0,0,0,0,0,0,3,3,0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0],
	[1,1,0,0,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,0,0,1,1],
	[1,1,0,0,0,0,0,2,2,2,2,0,0,0,0,2,2,2,2,0,0,0,0,0,1,1],
	[1,1,0,0,0,0,3,3,2,2,3,3,0,0,3,3,2,2,3,3,0,0,0,0,1,1],
	[1,1,0,0,0,0,3,3,2,2,3,3,0,0,3,3,0,0,3,3,0,0,0,0,1,1],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0],
	[0,0,0,0,1,1,1,1,0,0,0,1,9,8,1,0,0,0,1,1,1,1,0,0,0,0],
	[0,0,0,0,1,1,1,1,0,0,0,1,8,8,1,0,0,0,1,1,1,1,0,0,0,0],
];


var map10 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0],
	[0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0],
	[0,1,1,1,0,0,0,0,1,1,0,0,3,3,3,3,0,0,1,1,0,0,0,0,0,1],
	[0,1,0,0,0,0,0,0,1,1,0,0,3,3,3,3,0,0,1,1,0,0,0,0,0,1],
	[1,1,0,0,0,0,0,0,1,1,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,1],
	[1,1,0,0,0,0,0,0,1,1,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,1],
	[1,1,0,0,0,0,0,1,1,1,3,3,2,2,2,2,3,3,1,1,1,0,0,0,1,1],
	[1,1,0,0,0,0,0,1,1,1,3,3,2,2,2,2,3,3,1,1,1,0,0,0,1,1],
	[0,1,0,0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1],
	[0,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1],
	[0,0,1,1,1,1,1,1,2,2,2,2,1,1,2,2,2,2,1,1,1,1,1,1,1,0],
	[0,0,1,1,1,1,1,1,2,2,2,2,1,1,2,2,2,2,1,1,1,1,1,1,1,0],
	[0,0,0,0,1,1,1,1,2,2,0,0,1,1,0,0,2,2,1,1,1,1,1,0,0,0],
	[0,0,0,0,1,1,1,1,2,2,0,0,1,1,0,0,2,2,1,1,1,1,1,0,0,0],
	[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
	[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],
	[1,1,3,3,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,3,3,1,1],
	[1,1,3,3,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,3,3,1,1],
	[1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1],
	[1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1],
	[0,0,0,0,3,3,3,3,3,3,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0],
	[0,0,0,0,3,3,3,3,3,3,0,1,1,1,1,0,3,3,3,3,3,3,3,3,0,0],
	[0,0,0,0,0,0,1,0,0,0,0,1,9,8,1,0,0,0,0,0,1,0,0,0,0,0],
	[0,0,0,0,0,0,1,0,0,0,0,1,8,8,1,0,0,0,0,0,1,0,0,0,0,0],
];

var map11 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,1,1,1,1,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,1,1,1,1,0,0,0,0],
	[0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,1,0,0,3,3,3,3,3,3],
	[0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,1,0,0,3,3,3,3,3,3],
	[0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3],
	[0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3],
	[0,0,0,1,0,0,1,1,1,1,1,1,2,2,1,1,1,1,3,3,3,3,1,1,2,2],
	[0,0,0,1,0,0,1,1,1,1,1,1,2,2,1,1,1,1,3,3,3,3,0,0,2,2],
	[0,0,1,1,1,1,1,1,2,2,0,0,0,0,1,1,0,0,3,3,3,3,0,0,0,1],
	[0,0,0,0,0,0,0,0,2,2,0,0,0,0,1,1,0,0,3,3,3,3,0,0,0,1],
	[0,0,1,1,1,1,1,1,0,0,2,2,3,3,3,3,3,3,3,3,3,3,0,0,0,0],
	[0,0,1,1,1,1,1,1,0,0,2,2,3,3,3,3,3,3,3,3,3,3,0,0,0,0],
	[0,0,0,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,1,1,0,0],
	[0,0,0,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,1,1,0,0],
	[2,2,1,1,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,1,1,0,0],
	[2,2,1,1,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,1,1,0,0],
	[0,1,4,4,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,0,0],
	[0,1,4,4,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,1,1,0,0],
	[0,0,4,4,3,3,3,3,0,0,0,0,0,0,0,0,2,2,1,1,1,1,1,1,0,0],
	[0,0,4,4,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
	[0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0],
	[0,0,0,0,3,3,3,3,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0],
	[0,0,0,0,3,3,3,3,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,1,1,3,3,3,3,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0],
];

var map12 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
	[0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
	[0,0,4,4,4,4,4,4,4,4,4,4,0,0,1,1,1,0,0,0,0,0,1,1,0,0],
	[0,0,4,4,4,4,4,4,4,4,4,4,0,0,1,1,1,0,0,0,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,4,4,0,0,1,1,0,0,2,2,2,0,1,1,0,0],
	[0,0,0,0,2,2,2,2,2,2,4,4,0,0,1,1,0,0,2,2,2,0,1,1,0,0],
	[1,0,0,0,1,1,1,1,1,1,4,4,4,4,4,4,0,0,4,4,1,1,1,1,0,0],
	[1,1,0,0,1,1,1,1,1,1,4,4,4,4,4,4,0,0,4,4,1,1,1,1,0,0],
	[0,0,0,0,0,0,0,0,2,2,4,4,0,0,0,0,0,0,4,4,2,2,0,0,0,0],
	[0,0,0,0,0,0,0,0,2,2,4,4,0,0,0,0,0,0,4,4,0,0,0,0,0,0],
	[4,4,4,4,4,4,0,0,4,4,4,4,1,1,1,1,0,0,4,4,0,0,0,0,0,0],
	[4,4,4,4,4,4,0,0,4,4,4,4,1,1,1,1,0,0,4,4,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,0,0,4,4,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,4,4,4,4,0,0],
	[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,0,0],
	[1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,2,2,2,2,0,0,0,0,0,0,1,1,1,1,0,0,0,1],
	[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1],
	[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1],
	[1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0]
];

var map13 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0],
	[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,2,2,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0],
	[0,0,2,2,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1],
	[0,0,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1],
	[0,0,1,1,0,0,1,0,3,3,0,0,2,2,0,0,3,3,0,1,0,0,2,2,1,1],
	[0,0,1,1,0,0,0,0,3,3,2,2,2,2,2,2,3,3,0,1,0,0,2,2,1,1],
	[0,0,1,1,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,2,2,1,1],
	[0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1],
	[1,1,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,1,1],
	[1,1,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,1,1,1,1],
	[1,1,2,2,0,0,1,0,3,3,2,2,2,2,2,2,3,3,0,1,0,0,1,1,0,0],
	[1,1,2,2,0,0,1,0,3,3,0,0,2,2,0,0,3,3,0,1,0,0,1,1,0,0],
	[1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0],
	[1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,2,2,0,0],
	[1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0],
	[1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0],
	[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2],
	[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2],
	[1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0],
	[1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0],
	[1,1,1,1,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[1,1,1,1,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0]
];
var map14 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[3,3,3,3,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,3,3,3,3],
	[3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,3,3,3],
	[3,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,3,3],
	[3,3,0,0,0,0,0,1,1,1,3,3,1,1,3,3,1,1,1,0,0,0,0,0,3,3],
	[0,0,0,0,0,0,1,1,1,1,3,3,1,1,3,3,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,1,1,3,3,3,3,1,1,3,3,3,3,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,1,1,3,3,3,3,1,1,3,3,3,3,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	[3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,3],
	[3,3,0,0,0,0,1,1,1,1,3,3,1,1,3,3,1,1,1,1,0,0,0,0,3,3],
	[3,3,3,3,0,0,0,0,1,1,3,3,1,1,3,3,1,1,0,0,0,0,3,3,3,3],
	[3,3,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,3,3,3],
	[4,4,4,4,4,4,0,0,1,1,1,1,1,1,1,1,1,1,0,0,4,4,4,4,4,4],
	[4,4,4,4,4,4,0,0,1,1,1,1,1,1,1,1,1,1,0,0,4,4,4,4,4,4],
	[0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0],
	[0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0],
	[0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0],
	[1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1],
	[1,0,1,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,1,0,1],
	[2,0,2,0,2,0,0,2,0,0,0,1,9,8,1,0,0,0,2,0,0,2,0,2,0,2],
	[2,0,2,0,2,0,0,2,0,0,0,1,8,8,1,0,0,0,2,0,0,2,0,2,0,2]
];
var map15 = 
[
	[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,3,3,3,3,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,3,3,3,3,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0],
	[3,3,2,2,1,1,3,3,1,1,1,1,1,1,3,3,3,3,3,3,3,3,1,1,2,2],
	[3,3,0,0,1,1,3,3,1,1,1,1,1,1,3,3,3,3,3,3,3,3,1,1,2,2],
	[3,3,3,3,1,1,3,3,3,3,3,3,2,2,3,3,3,3,1,1,2,0,1,1,0,0],
	[3,3,3,3,1,1,3,3,3,3,3,3,0,0,3,3,3,3,1,1,0,0,1,1,0,0],
	[0,0,3,3,3,3,1,1,0,0,3,3,3,3,3,3,3,3,1,1,0,0,1,1,0,0],
	[0,0,3,3,3,3,1,1,2,2,3,3,3,3,3,3,3,3,1,1,0,0,1,1,0,0],
	[0,0,1,1,1,1,1,1,1,1,1,1,3,3,3,3,1,1,1,1,1,0,1,1,0,0],
	[0,0,1,1,1,1,1,1,1,1,1,1,3,3,3,3,1,1,1,1,1,0,3,3,3,3],
	[0,2,2,2,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,3,3,3,3],
	[0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,3,3],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,3,3,3,3,1,1,1,0,3,3],
	[0,0,1,1,0,0,1,1,0,0,2,2,1,1,0,0,3,3,3,3,1,1,1,0,3,3],
	[0,0,1,1,0,0,0,0,0,1,1,1,1,1,3,3,3,3,1,1,0,0,0,0,3,3],
	[0,0,1,1,0,0,0,0,0,1,1,1,0,0,3,3,3,3,1,1,0,0,0,0,3,3],
	[0,0,1,1,1,1,1,0,0,1,1,1,3,3,3,3,1,1,3,3,1,1,3,3,3,3],
	[0,0,1,1,1,1,1,0,0,1,0,0,3,3,3,3,1,1,3,3,1,1,3,3,3,3],
	[0,0,0,0,1,1,0,0,3,3,0,0,0,0,0,0,1,1,3,3,1,1,3,3,0,0],
	[0,0,0,0,1,1,0,0,3,3,0,1,1,1,1,0,1,1,3,3,0,0,3,3,0,0],
	[0,0,0,0,1,1,0,0,0,0,0,1,9,8,1,0,0,0,3,3,3,3,3,3,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,3,3,3,3,3,3,0,0]
];

var map16 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,2,2,3,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,2,2,3,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,3,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,3,3,0,0,3,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,3,3,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,3,3,0,0,0,0,0,0,0,0,3,3,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,3,3,3,3,0,0,0,0,3,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0],
	[0,0,3,3,3,3,0,0,0,0,3,3,0,0,3,3,2,2,0,0,0,0,0,0,0,0],
	[0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,0,0],
	[0,0,3,3,0,0,3,3,0,0,3,3,0,0,0,0,3,3,1,1,0,0,0,0,0,0],
	[0,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0],
	[0,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,3,3,3,3,2,2,0,0,0,0],
	[0,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0],
	[0,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,1,1,0,0],
	[0,0,0,0,0,0,3,3,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3,0,0],
	[0,0,0,0,0,0,3,3,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3,0,0],
	[1,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,3,3,3,3,3,2,2],
	[1,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,3,3,3,3,3,2,2],
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3],
	[1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,3,3,3],
	[2,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,3],
	[2,2,1,1,1,1,0,0,0,0,0,1,1,1,1,0,3,3,0,0,3,3,3,3,3,3],
	[2,2,2,2,1,1,1,1,0,0,0,1,9,8,1,0,3,3,0,0,0,0,3,3,3,3],
	[2,2,2,2,1,1,1,1,0,0,0,1,8,8,1,0,3,3,0,0,0,0,3,3,3,3]
];
var map17 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	[0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0],
	[0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0],
	[3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,1,1,0,0],
	[3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,1,1,0,0],
	[3,3,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[3,3,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[3,3,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[3,3,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,0,0],
	[3,3,0,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,3,3,1,1,1,1,1,0],
	[3,3,0,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,3,3,1,1,1,1,1,0],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,0],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,0],
	[1,1,3,3,3,3,1,1,1,1,3,3,3,3,3,3,1,1,1,1,1,1,1,1,0,0],
	[1,1,3,3,3,3,1,1,1,1,3,3,3,3,3,3,1,1,1,1,1,1,1,1,0,0],
	[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2],
	[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2],
	[2,2,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2],
	[2,2,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2],
	[0,0,2,2,1,1,1,1,2,2,0,0,0,0,0,0,1,1,1,1,2,2,2,2,2,0],
	[0,0,2,2,1,1,0,0,2,2,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0]
];

var map18 = 
[
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,3,3,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,3,3,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0],
	[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,2,0,0],
	[1,1,3,3,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,2,2,0,0],
	[1,1,3,3,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,2,2,0,0],
	[0,0,1,1,3,3,1,1,0,0,0,0,1,1,0,0,3,3,1,1,2,2,2,2,0,0],
	[0,0,1,1,3,3,1,1,0,0,0,0,1,1,0,0,3,3,1,1,2,2,2,2,0,0],
	[0,0,0,0,1,1,0,0,3,3,2,2,1,1,3,3,0,0,1,1,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,3,3,2,2,1,1,3,3,0,0,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,2,2,0,0,1,1,2,2,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,2,2,0,0,1,1,2,2,1,1,1,1,0,0,0,0,0,0],
	[0,0,0,0,1,1,1,1,2,2,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,1,1,2,2,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,3,3,1,1,2,2,3,3,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,0,0,3,3,1,1,2,2,3,3,0,0,0,0,0,0,0,0,0,0],
	[2,2,2,2,2,2,3,3,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
	[2,2,2,2,2,2,3,3,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
	[2,2,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,2,2,2,2,0,0,0,0],
	[2,2,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,2,2,2,2,0,0,0,0],
	[2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,0,0],
	[2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,2,1,1,1,1,0,0],
	[3,3,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2],
	[3,3,2,2,2,2,2,2,0,0,0,1,1,1,1,0,0,0,0,0,1,1,2,2,2,2],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,0,0,0,0,2,2,2,2],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,2,2,2,2]
];

var map19 = 
[
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0],
	[0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0],
	[1,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,1,1,0,0,1,1],
	[1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1],
	[1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1],
	[2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2,0,0,2,2],
	[0,0,0,0,0,0,0,0,2,2,0,0,3,3,0,0,2,2,0,0,0,0,0,0,0,0],
	[3,3,3,3,0,0,0,0,1,1,0,0,3,3,0,0,1,1,0,0,0,0,3,3,3,3],
	[3,3,3,3,0,0,0,0,1,1,0,0,3,3,0,0,1,1,0,0,0,0,3,3,3,3],
	[3,3,3,3,3,3,3,3,1,1,1,1,3,3,1,1,1,1,3,3,3,3,3,3,3,3],
	[3,3,3,3,3,3,3,3,1,1,0,0,3,3,0,0,1,1,3,3,3,3,3,3,3,3],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
	[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,1,1,0,0,3,3,0,0,1,1,0,0,0,0,0,0,0,0],
	[1,1,0,0,1,1,0,0,1,1,0,0,3,3,0,0,1,1,0,0,1,1,0,0,1,1],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,1,1,0,0,1,1,0,0,0,1,9,8,1,0,0,0,1,1,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,0,0,0,0,0,0,0,0]
];

var map20 = 
[
	[0,0,0,0,0,0,4,4,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0],
	[0,0,0,0,0,0,4,4,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,2,0,0,0,0],
	[0,0,0,0,0,0,4,4,0,0,0,0,2,2,0,0,1,1,0,0,1,1,0,0,0,0],
	[0,0,0,0,0,0,4,4,0,0,1,1,2,2,0,0,1,1,0,0,1,1,0,0,0,0],
	[2,2,0,0,1,1,4,4,0,0,2,2,0,0,0,0,1,1,0,0,1,1,0,0,0,0],
	[0,0,0,0,1,1,4,4,0,0,2,2,0,0,1,1,0,0,0,0,1,1,0,0,0,0],
	[0,0,0,0,1,1,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,1,1,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0],
	[1,1,0,0,1,1,4,4,4,4,0,0,4,4,4,4,4,4,4,4,0,0,0,0,1,1],
	[1,1,0,0,1,1,4,4,4,4,0,0,4,4,4,4,4,4,4,4,0,0,0,0,1,1],
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,4,4,0,0,2,2,2,2],
	[0,0,0,0,0,0,1,1,0,0,0,0,0,0,3,3,0,0,4,4,0,0,0,0,0,0],
	[1,1,1,1,0,1,1,1,0,0,2,2,3,3,3,3,3,3,4,4,0,0,0,0,0,0],
	[1,1,1,1,0,1,1,1,0,0,2,2,3,3,3,3,3,3,4,4,0,0,1,1,1,1],
	[1,1,0,0,0,1,0,0,0,0,1,1,3,3,3,3,3,3,4,4,0,0,1,1,0,0],
	[0,0,0,0,0,1,0,0,0,0,1,1,3,3,3,3,3,3,4,4,0,0,1,1,0,0],
	[0,0,0,0,0,0,0,0,0,0,1,1,0,0,3,3,0,0,4,4,0,0,3,3,0,0],
	[0,0,2,2,0,0,0,0,0,0,1,1,0,0,3,3,0,0,4,4,0,0,3,3,0,0],
	[0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,3,3,3,3,3,3],
	[0,0,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3],
	[0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,3,3,3,3,3,3],
	[0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,4,4,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,4,4,0,0,3,3,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,4,4,0,0,3,3,0,0]
];
var map21 = 
[
	[0,0,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
	[4,4,4,4,0,0,4,4,4,4,4,4,0,0,2,4,4,4,4,0,0,0,0,0,0,3],
	[4,0,2,4,1,1,4,1,3,3,3,4,3,0,2,4,2,2,4,0,0,0,3,3,3,3],
	[4,0,2,4,4,4,4,0,3,0,0,4,4,4,4,4,0,0,4,4,4,4,3,2,0,0],
	[4,0,2,0,3,3,3,3,3,2,2,2,3,2,2,5,5,5,5,5,0,4,3,2,0,0],
	[4,4,4,0,3,0,0,0,2,0,0,0,3,0,0,5,0,1,0,0,0,4,3,2,0,4],
	[0,0,4,0,3,0,0,0,2,4,4,4,4,4,3,5,3,3,3,0,0,4,3,2,0,4],
	[0,0,4,1,3,0,0,0,2,4,0,5,5,5,5,5,1,1,3,0,0,4,4,4,4,4],
	[0,3,4,3,3,1,0,0,3,4,3,5,3,4,0,0,1,1,3,3,3,3,3,2,0,4],
	[0,3,4,0,1,0,1,0,3,4,0,5,3,4,4,4,4,3,3,3,1,1,0,2,0,4],
	[4,4,4,0,1,4,4,4,4,4,0,5,1,1,0,0,4,1,0,3,1,1,0,2,4,4],
	[4,3,2,0,1,0,1,0,5,5,5,5,1,0,1,2,4,3,3,3,3,3,2,2,4,0],
	[4,3,2,1,1,1,0,0,5,1,1,3,1,1,0,2,4,1,0,3,1,3,0,0,4,0],
	[4,3,2,1,1,0,0,0,5,0,1,3,1,0,4,4,4,3,4,4,4,3,0,0,4,0],
	[4,3,3,3,3,3,0,0,5,3,3,3,1,0,4,3,0,1,4,0,4,4,4,3,4,0],
	[4,0,2,0,1,5,5,5,5,4,4,0,1,0,4,3,2,2,4,2,0,1,4,3,4,4],
	[4,0,2,1,1,5,4,1,3,1,4,1,1,1,4,3,0,1,4,2,0,1,4,3,0,4],
	[4,4,4,4,1,5,4,0,3,3,4,3,3,3,4,3,0,1,4,2,0,1,4,3,0,4],
	[0,0,2,4,1,5,4,0,3,0,4,4,4,4,4,0,0,1,4,2,0,1,4,4,3,4],
	[0,1,5,5,5,5,4,3,3,1,1,1,1,1,1,1,0,1,4,3,3,3,3,4,0,4],
	[0,0,5,4,4,4,4,3,3,0,0,0,3,3,3,3,3,1,4,4,4,0,3,4,0,4],
	[0,0,5,0,1,3,5,0,3,0,0,0,3,1,1,1,3,1,0,3,4,0,3,4,3,4],
	[5,5,5,0,1,3,5,0,3,0,2,2,3,2,2,0,3,0,0,3,4,0,0,4,4,4],
	[0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,4,4,3,3,3,3,3,3],
	[0,0,0,0,0,0,0,0,0,0,0,1,9,8,1,0,0,0,4,4,0,0,3,3,0,0],
	[0,0,0,0,0,0,0,0,0,0,0,1,8,8,1,0,0,0,4,4,0,0,3,3,0,0]
];



//StageStart.js

function StageStart()
{
		this.time = -15;
		this.frame = 0;
		this.stageNum = new Num();
		this.num = true;
		
		this.xx = images["stageStart"][0];
		this.yy = images["stageStart"][1];
}

StageStart.prototype.draw = function(canvas)
{
	var temp;
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");

	myCanvas.dirty = true;
	
	if(this.frame < 1000) 
	{
		this.time++;
	}
	else 
	{
		gameState = STATE_PLAY;
		return;
	}
	
	this.frame = this.time * 15;
	temp = this.frame;
	
	if(this.frame >= 224 && this.frame < 700) 
	{
		temp = 224;
	}
	
	else if(this.frame >= 699) 
	{

		temp = (224 - (this.frame - 700));
		
		graphics.clearRect(0, 224, 512, 15);
		graphics.clearRect(0, temp, 512, 15);
		graphics.clearRect(0, 448 - temp, 512, 15);
		return;
	}
	
	else if(this.frame >= 925) 
	{
		temp = 0;
	}
	
	if(temp == 224) 
	{
		if(this.num) 
		{

			graphics.drawImage(img, this.xx, this.yy, 78, 14, 194, 208, 78, 14);
			this.stageNum.draw("stage", 308, 208, level, false);
			
			sound.play("stageStart")
			this.num = false;
			init();
			draw();
			scoreBoard.draw();
		}
		return;
	}
	
	graphics.fillStyle = "#7f7f7f";
	graphics.fillRect(0, temp, 512, 15);
	graphics.fillRect(0, 448 - temp - 15 , 512, 15);
	
	
};

StageStart.prototype.init = function()
{
	this.time = -15;
	this.frame = 0;
	this.num = true;
};


//Sprite.js

function Sprite(x,y,src,width)
{
	this.x = x;
	this.y = y;
	
	this.width = width;
	this.src = src;
}

Sprite.prototype.hitTestObject = function(obj)
{
	
	var minx = this.x > obj.x ? this.x :obj.x;
	var maxx = this.x + this.width < obj.x + obj.width ? this.x + this.width : obj.x + obj.width ;
	var miny = this.y > obj.y ? this.y : obj.y;
	var maxy = this.y + this.width < obj.y + obj.width ? this.y + this.width : obj.y + obj.width;
	
	if (minx <= maxx && miny <= maxy) {return true;}
	else {return false;}
};


//TankStart.js

function TankStart(x, y)
{
	Sprite.call(this, x, y, "tankStart", 32);
	
	this.frame = 0;
	this.time =  0;
	this.num = 0;
}

TankStart.prototype = new Sprite();

TankStart.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.drawImage(img, 32 * this.frame + images[this.src][0], images[this.src][1], 32, 32, this.x + offerX,this.y + offerY,32,32) ;	
	
	myCanvas.dirty = true;
};

TankStart.prototype.updata = function()
{
	if(this.time%5 == 1) {this.frame++;}

	if(this.frame > 5)  
	{
		this.frame = 0;
		this.num ++;
	}

	this.time ++;
};


function updataTankStarts()
{
	for(var i = 0;i < tankStarts.length;i++)
	{
		tankStarts[i].updata();
		
		if(tankStarts[i].num >= 4 )
		{
			addTank(tankStarts[i].x, tankStarts[i].y, parseInt(Math.random() * 3) + 1);
			tankStarts.splice(i,1);
			i --;
		}	
	}
}


function drawTankStarts()
{
	for(var i = 0;i < tankStarts.length;i++)
	{
		tankStarts[i].draw("main");
	}
}



//Tank.js

function Tank(x, y, src, speed , type)
{
	Sprite.call(this, x, y, src, 30);
	
	this.dir = DOWN;
	this.preDir = DOWN;
	this.speed = speed;
	this.type = type;
	this.isShot = false;
	this.time = 0;
	this.shotSpeed = 70;
	this.life = 1;
}

Tank.prototype = new Sprite();

Tank.prototype.moveFree = function()
{
	this.shot();
	
	//if(Math.random() * 200 < 1) this.dir = parseInt(Math.random() * 4);
	
	if(!this.move(this.dir))//&& Math.random() * 4 < 1) 
	{
		
		var i = parseInt(Math.random() * 4);
		var dir = this.dir;
		
		if( dir == UP && i == DOWN && Math.random() * 4 <= 2)  {this.dir = UP;}
		else if( dir == DOWN && i == UP && Math.random() * 4 <= 2 )  {this.dir = DOWN;}
		else if( dir == LEFT && i == RIGHT && Math.random() * 4 <= 2 )  {this.dir = LEFT;}
		else if( dir == RIGHT && i == LEFT && Math.random() * 4 <= 2 )  {this.dir = RIGHT;}
		
		else {this.dir = i;}
	
	}
};

Tank.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	var xx = images[this.src][0];
	var yy = images[this.src][1];
	
	graphics.drawImage(img,32 * this.dir + xx, yy, 32, 32,this.x + offerX,this.y + offerY,32,32) ;	
	
	myCanvas.dirty = true;
};

Tank.prototype.updata = function()
{
	if(this.isShot) 
	{
		this.time++;
		if(this.time > this.shotSpeed)
		{
			this.time = 0;
			this.isShot = false;
		}
	}
};

Tank.prototype.move = function(dir)
{
	switch(dir)
	{
		case UP :
		{
			if(this.moveUp()) 
			{
				this.y -= this.speed;return true;
			} 
			
			break;
		}
		case DOWN:
		{
			if(this.moveDown()) 
			{
				this.y += this.speed;return true;
			} 
			break;
		}
		case LEFT:
		{
			if(this.moveLeft()) 
			{
				this.x -= this.speed;return true;
			} 
			break;
		}
		case RIGHT:
		{
			if(this.moveRight()) 
			{
				this.x += this.speed;return true;
			} 
			break;
		}
		
		default:break;
	}
	return false;
};

function clearTank(x,y)
{
	var myCanvas = document.getElementById("main");
	var graphics = myCanvas.getContext("2d");
	var imgTank = document.getElementById("Tank");
	
	graphics.clearRect(x + offerX,y + offerY,32,32);

	myCanvas.dirty = true;
}

Tank.prototype.setPosition = function()
{

	if ( (this.preDir < 2 && this.dir >1) || (this.preDir > 1 && this.dir <2)  ) 
	{
		var f;
		switch(this.dir)
		{
			case UP:
			case DOWN:
				f = parseInt((this.x + 8) / 16);
				f = f * 16;
				this.x = f;	
				break;
			
			case LEFT:
			case RIGHT:
				f = parseInt((this.y + 8) / 16);
				f = f * 16;
				this.y = f ;
				break;
		}
	}
	this.preDir = this.dir;
	
};

Tank.prototype.moveUp = function()
{
	this.dir = UP;
	this.setPosition();
	var col = parseInt((this.y - this.speed)/16);
	if(col < 0) 
	{
		col = 0;
	}
	var row1 = parseInt(this.x /16);
	var row2 = parseInt( (this.x + this.width) /16);
	var row3 = parseInt( (this.x +(this.width/2) )/16);
	
	if(this.y - this.speed > -1 && check(row1,col) && check(row2,col) && check(row3,col))
	{
		return !this.checkHit(tanks);
	}
	return false;
	
};

Tank.prototype.moveDown = function()
{
	this.dir = DOWN;
	this.setPosition();
	
	var col = parseInt((this.y + this.speed + this.width)/16);
	var row1 = parseInt(this.x /16);
	var row2 = parseInt( (this.x + this.width) /16);
	var row3 = parseInt( (this.x +(this.width/2) )/16);
	
	if(this.y + this.speed + this.width < 416 && check(row1,col) && check(row2,col) && check(row3,col))
	{
		return !this.checkHit(tanks);
	}
	return false;
	
};

Tank.prototype.moveLeft = function()
{
	this.dir = LEFT;
	this.setPosition();
	
	var row = parseInt((this.x - this.speed)/16);
	if(row < 0) 
	{
		row = 0;
	}
	var col1 = parseInt(this.y /16);
	var col2 = parseInt( (this.y + this.width) /16);
	var col3 = parseInt( (this.y +(this.width/2) )/16);
	
	
	if(this.x - this.speed > -1 && check(row,col1) && check(row,col2) && check(row,col3))
	{
		return !this.checkHit(tanks);
	}
	return false;
	
};

Tank.prototype.moveRight = function()
{
	
	this.dir = RIGHT;
	this.setPosition();
	
	var row = parseInt((this.x + this.speed + this.width)/16);
	
	var col1 = parseInt(this.y /16);
	var col2 = parseInt( (this.y + this.width) /16);
	var col3 = parseInt( (this.y +(this.width/2) )/16);
	
	if(this.x + this.speed + this.width < 416 && check(row,col1) && check(row,col2) && check(row,col3))
	{
		return !this.checkHit(tanks);
	}
	return false;
	
};



function check(x,y)
{
	if(y > 25) 
	{	
		y = 25;
	}
	else if(y < 0 ) 
	{
		y = 0;
	}
	
	if(x < 0 )  
	{
		x = 0;
	}
	else if(x > 25)  
	{
		x = 25;
	}
	
	if( map[y][x] == NON || map[y][x] == GRASS || map[y][x] == ICE ) 
	{
		return true;
	}
	else  
	{	
		return false;
	}
}



Tank.prototype.shot = function()
{
	if(!this.isShot)
	{	
		this.isShot = true;
		var bullet = new Bullet(this.x,this.y,this.type,this.dir);
		bullets.push(bullet);
	}
};



Tank.prototype.checkHit = function()
{
	var j;
	for (j = 0; j < tanks.length ; j++ )
	{	
		if (this == tanks[j]) 
		{
			continue;
		}
		var w = tanks[j].width;
		
		var p1a,p2a;
		
		
		if(stopTime	== 0)
		{
			p1a = movePoint(this);
			p2a = movePoint(tanks[j]);
		}
		
		else
		{
			p1a = movePoint(this);
			p2a = movePoint(tanks[j]);
			
			if(this.type == 0) 
			{
				p2a = new CPoint(tanks[j].x,tanks[j].y);
			}
			else 
			{
				p1a = new CPoint(this.x,this.y);
			}
		}
		
		var p1b = new CPoint(p1a.x + this.width, p1a.y + this.width);
		var p2b = new CPoint(p2a.x + w, p2a.y + w);
		
		var isHit = false;

		var minx = p1a.x > p2a.x ? p1a.x : p2a.x;
		var maxx = p1b.x < p2b.x ? p1b.x : p2b.x;
		var miny = p1a.y > p2a.y ? p1a.y : p2a.y;
		var maxy = p1b.y < p2b.y ? p1b.y : p2b.y;

		
		if (minx <= maxx && miny <= maxy) 
		{
			isHit = true;
		}	
		else 
		{
			isHit = false;
		}
		
		if( isHit )
		{
				var scale = 25;
				
				switch(this.dir)
				{
					case UP:	if ( tanks[j].y  + scale< this.y)
								{
									return true;
								}
								break;
					case DOWN:	if ( tanks[j].y  > this.y + scale)
								{
									return true;
								}
								break;
					case LEFT:	if ( tanks[j].x + scale < this.x)
								{
									return true;
								}
								break;
					case RIGHT:	if ( tanks[j].x  > this.x + scale) 
								{
									return true;
								}
								break;
				}
		}
	}
		
	return false;
};

function movePoint(tank)
{
	switch(tank.dir)
	{
		case UP: return new CPoint(tank.x, tank.y - tank.speed);
		case DOWN: return new CPoint(tank.x, tank.y + tank.speed);
		case LEFT: return new CPoint(tank.x - tank.speed, tank.y);
		case RIGHT: return new CPoint(tank.x + tank.speed, tank.y);
		default:return NULL;
	}
}


function CPoint(x,y)
{
	this.x = x;
	this.y = y;
}


function updataTanks()
{
	var i;
	for(i = playerNum; i < tanks.length ; i ++)
	{
		if(stopTime == 0) tanks[i].moveFree();		
		tanks[i].updata();
	}
	
	if(stopTime != 0) 
	{
		stopTime--;
	}
	
	for(var i = 0; i < playerNum; i ++)
	{
		tanks[i].updata();
	}
}

function drawTanks()
{
	for(var i = 0; i < tanks.length ; i ++)
	{
		tanks[i].draw("main");
	}
}


//MyTank.js

function MyTank(x, y)
{
	Tank.call(this, x, y, "myTank", 2 , 0);
	this.isGod = true;
	this.godTime = 600;
	this.dir = UP;
	this.score = 0;
	this.name = 0;
	
	this.live = 5;
	this.score = 0;
}

MyTank.prototype = new Tank();

MyTank.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	var tankx,tanky,shieldx,shieldy;
	
	shieldx = images["shield"][0];
	shieldy = images["shield"][1];
	
	if(this.name == 1) 
	{
		tankx = images["myTank"][0];
		tanky = images["myTank"][1]; 
	}
	
	else
	{
		tankx = images["myTank2"][0];
		tanky = images["myTank2"][1]; 
	}
	
	graphics.drawImage(img, 32 * this.dir + tankx, tanky, 32, 32, this.x + offerX, this.y + offerY, 32, 32) ;	
		
	
	if(this.isGod)
	{
		var fr = parseInt(this.godTime / 6 )% 2;
		graphics.drawImage(img, shieldx, fr * 32 + shieldy, 32, 32, this.x + offerX, this.y + offerY, 32, 32) ;
	}
		
	myCanvas.dirty = true;
};

MyTank.prototype.shot = function()
{
	if(!this.isShot)
	{	
		this.isShot = true;
		var bullet = new Bullet(this.x,this.y,this.type,this.dir,this.name);
		bullets.push(bullet);
		sound.play("attack");
	}
};

MyTank.prototype.updata = function()
{
	if(this.isShot) 
	{
		this.time++;
		if(this.time > this.shotSpeed)
		{
			this.time = 0;
			this.isShot = false;
		}
	}
	
	if(this.isGod) 
	{
		this.godTime --;		
		if(this.godTime == 0)	{this.isGod = false;}
	}
};

function Tank1(x, y)
{
	Tank.call(this, x, y, "tank1", 2, 1);
	this.score = 100;
}

Tank1.prototype = new Tank();



function Tank2(x, y)
{
	Tank.call(this, x, y, "tank2", 3, 1);
	this.score = 200;
}

Tank2.prototype = new Tank();


function Tank3(x, y)
{
	Tank.call(this, x, y, "tank3", 1, 1);
	this.life = 3;
	this.score = 400;
	return;
}

Tank3.prototype = new Tank();

Tank3.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.drawImage(img, 32 * this.dir +(3 - this.life) * 128 + images["tank3"][0], images["tank3"][1], 32, 32, this.x + offerX, this.y + offerY, 32, 32) ;	
};


//Bullet.js

function Bullet(x,y,type,dir,name)
{
	Sprite.call(this, x, y, "bullet", 6);
	
	this.type = type;
	this.speed = 6;
	this.dir = dir;
	this.name = name;
	
	initXY.call(this);
}

Bullet.prototype = new Sprite();

function initXY()
{
		switch(this.dir)
		{
			case UP:
					this.x += 13;
					this.y -= 3;
					break;
				
			case DOWN:
					this.x += 13;
					this.y += 32;
					break;
				
			case RIGHT:
					this.y += 13;
					this.x += 32;
					break;
				
			case LEFT:
					this.y += 13;
					this.x -= 3;
					break;
				
		}
}

Bullet.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.drawImage(img, 6 * this.dir + images[this.src][0], images[this.src][1], 6, 6, this.x + offerX, this.y + offerY, 6, 6) ;

	myCanvas.dirty = true;
};

Bullet.prototype.move = function()
{
	switch(this.dir)
	{
		case UP:
			this.y -= this.speed;
			break;
		case DOWN:
			this.y += this.speed;
			break;
		case LEFT:
			this.x -= this.speed;
			break;
		case RIGHT:
			this.x += this.speed;
			break;
			
		
	}
};

Bullet.prototype.checkHit = function()
{
	var xx = [ parseInt((this.x - 4)/ 16), parseInt((this.x + 3) / 16), parseInt((this.x + 10) / 16)];
	var	yy = [ parseInt((this.y - 4) / 16), parseInt((this.y + 3) / 16), parseInt((this.y + 10) / 16)];
	
	if(xx[2] > 25) {xx[2] = 25;}
	if(yy[2] > 25) {yy[2] = 25;}
	if(xx[1] > 25) {xx[1] = 25;}
	if(yy[1] > 25) {yy[1] = 25;}
	if(xx[0] < 0)  {xx[0] = 0;}
	if(xx[0] < 0)  {yy[0] = 0;}
	
	var dir = this.dir;
	var isHit = false;

	if(this.x < 0 || this.y < 0 || this.x > 416 || this.y > 416)
	{
		if(this.type == 0)
		{
			sound.play("shootOver");
		}
		return true;
	}
	else 
	{
		var i,j;
		for(var k = 0 ; k < 2 ; k ++)
		{
			if(dir == UP || dir == DOWN)
			{
				j = 1;
				i = k;
			}
			else
			{
				i = 1;
				j = k;
			}
			var yj = yy[j];
			var xi = xx[i];
			
			var wallType = map[yj][xi];
			
			if(wallType == WALL || wallType == GRID || wallType > 5) 
			{
				isHit = true;
				
				
				if(wallType == WALL) 
				{ 
					switch(dir)
					{
						case UP :map[yj][xi] = 10;
							     break;
						case DOWN :map[yj][xi] = 11;
								   break;
						case LEFT :map[yj][xi] = 12;
								   break;
						case RIGHT :map[yj][xi] = 13;
									break;
					}
					
					clearWall(xi,yj,map[yj][xi]);
				}
				
				else if(wallType == GRID && this.type == 0)
				{
					sound.play("shootOver");
				}
				
				if (wallType == HOME ||  wallType == 8)
				{
					gameState = STATE_GAMEOVER;
					var bombFx = new BombFx(this.x, this.y, 0);
					bombFxs.push(bombFx);
					sound.play("bomb0");
					return true;
				}
				
				else if(wallType > 9)
				{
					map[yj][xi] = NON;
					
					var myCanvas = document.getElementById("wall");
					var graphics = myCanvas.getContext("2d");
					graphics.fillRect(xi * 16 + offerX,yj * 16 + offerY,16,16);
					
					switch(wallType)
					{
						case 10 :this.y -= 4;
							     break;
						case 11 :this.y += 4;
								 break;
						case 12 :this.x -= 4;
								 break;
						case 13 :this.x += 4;
								 break;
					}
				}
			}
		}	
		return isHit;
	}
};

function clearWall(xx,yy,type)
{
	var myCanvas = document.getElementById("wall");
	var graphics = myCanvas.getContext("2d");
	
	var x = xx * 16;
	var y = yy * 16;
	graphics.fillStyle = "000"
	switch(type)
	{
		case 10 :graphics.fillRect(x + offerX,y + offerY + 8,16,8);
				 break;
		case 11 :graphics.fillRect(x + offerX,y + offerY,16,8);
				 break;
		case 12 :graphics.fillRect(x + offerX + 8,y + offerY,8,16);
				 break;
		case 13 :graphics.fillRect(x + offerX,y + offerY,8,16);
				 break;
	}
}

Bullet.prototype.hitTanks = function()
{
	for(var i = 0;i < tanks.length;i ++ )
	{
		var xx = tanks[i].x;
		var yy = tanks[i].y;
		var isBomb = false;

		if(this.hitTestObject(tanks[i]) && tanks[i].type != this.type)
		{
			var tankScore;
			
			if(this.type == 0)                                        //子弹是自己发射的
			{
				tanks[i].life --;
				
				if(tanks[i].life == 0)
				{
					tankScore = tanks[i].score;
					
					tanks.splice(i,1);
					i --;
					isBomb = true;
					sound.play("bomb1");
				}	
			}
			
			else if(!tanks[i].isGod)
			{
				tanks[i].live --;
				scoreBoard.drawPlayerLife(tanks[i].name,tanks[i].live);
				sound.play("bomb0");
				if(tanks[i].live == 0)
				{
					tanks.splice(i,1);
					playerNum --;
					
					
					
					if(playerNum == 0) 
					{
						var bombFx = new BombFx(xx, yy, 0);
						bombFxs.push(bombFx);
						
						gameState = STATE_GAMEOVER;
						return;
					}
					
					continue;
				}
				
				initMyTank(tanks[i].name);
				tankScore = 0;
				isBomb = true;
			}
			
			
			if(isBomb)
			{
				var bombFx = new BombFx(xx, yy, tankScore);
				bombFxs.push(bombFx);
			}	
			
			if(tankNum >= 20 && tanks.length == playerNum) nextStage();
			return true;
		}
	}
	return false;
};



function updataBullets()
{
	for(var i = 0;i < bullets.length;i++)
	{
		bullets[i].move();
		
		if(bullets[i].type == 0)
		{
			for(var j = 0;j < bullets.length;j++)
			{
					if(i == j) {continue;}
					else if(bullets[i].hitTestObject(bullets[j]) && bullets[i].type == 0)
					{	
						var hitFx = new HitFx(bullets[i].x + 3,bullets[i].y + 3);
						hitFx.type = 1;
						hitFxs.push(hitFx);
						
						if(bullets[i].name == 1) {player1.time = player1.shotSpeed - 14;}
						else {player2.time = player2.shotSpeed - 14;}
						
						bullets.splice(i > j ? i : j, 1);
						bullets.splice(i < j ? i : j, 1);
						
						if(i < j) {i --;}
						else {i -= 2;}
						
						j = 1000;//退出循环
					}
			}
		}
	
		var isHit = false;
		
		if(i < 0) {return;}
		if(i >= bullets.length) {return;}
		
		if(bullets[i].checkHit()) 
		{
			isHit = true;//碰到墙壁
		}
		
		if(bullets[i].hitTanks())  
		{
			isHit = true;
		}//碰到坦克
	

		if(isHit && bullets[i]) 
		{
			if(bullets[i].type == 0) 
			{
				if(bullets[i].name == 1) {player1.time = player1.shotSpeed - 14;}
				else {player2.time = player2.shotSpeed - 14;}
			}
			var hitFx = new HitFx(bullets[i].x + 3,bullets[i].y + 3);
			bullets.splice(i,1);
			i --;
			hitFxs.push(hitFx);
		}
	}
}

function drawBullets()
{
	for(var i = 0; i < bullets.length ; i ++)
	{
		bullets[i].draw("main");
	}
}


//HitFx.js

function HitFx(x,y)
{
	Sprite.call(this, x, y, "hitFx", 6);
	
	this.x = x - 16;
	this.y = y - 16;
	
	this.type = 0;
	this.frame = 0;
	this.time = -3;
}

HitFx.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	
	if(this.type == 0)
	{
		graphics.drawImage(img,this.frame * 32 + images[this.src][0], images[this.src][1], 32, 32, this.x + offerX, this.y + offerY, 32, 32) ;
	}
	else
	{
		graphics.drawImage(img,this.frame * 32 + images[this.src][0], images[this.src][1], 32, 32, this.x + offerX + 6, this.y + offerY + 6, 20, 20) ;
	}
	
	myCanvas.dirty = true;
};

HitFx.prototype.updata = function()
{
	if(this.time % 4 == 1) {this.frame++;}
	
	if(this.frame > 3) {return;}
	
	this.time ++;
};

function drawHitFxs()
{
	
	for(var i = 0;i < hitFxs.length;i++)
	{
		hitFxs[i].draw("main");
	}
}

function updataHitFxs()
{
	
	for(var i = 0;i < hitFxs.length;i++)
	{
		hitFxs[i].updata();
		
		if(hitFxs[i].frame > 2)
		{
			
			hitFxs.splice(i,1);
			i --;
		}
	}
}

//BombFx.js

function BombFx(x,y,score)
{
	Sprite.call(this, x, y, "bombFx", 6);
	
	this.x = x - 16;
	this.y = y - 16;
	
	this.frame = 0;
	this.time = -10;
	this.score = score;
}

BombFx.prototype.draw = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.drawImage(img,this.frame * 67 + images[this.src][0], images[this.src][1], 66, 66, this.x + offerX, this.y + offerY, 66, 66) ;

	myCanvas.dirty = true;
};

BombFx.prototype.updata = function()
{
	if(this.time % 7 == 1) 
	{
		this.frame++;
	}
	if(this.frame > 4) 
	{
		return;
	}
	this.time ++;
};

function drawBombFxs()
{
	
	for(var i = 0;i < bombFxs.length;i++)
	{
		bombFxs[i].draw("main");
	}
}

function updataBombFxs()
{
	
	for(var i = 0;i < bombFxs.length;i++)
	{
		bombFxs[i].updata();
		
		if(bombFxs[i].frame > 3)
		{
			var tempScore = new Score(bombFxs[i].x + 33,bombFxs[i].y + 33,bombFxs[i].score); 
			scoreNums.push(tempScore);
			
			bombFxs.splice(i,1);
			i --;
		}
	}
}


//Food.js

function Food()
{
	Sprite.call(this, 0, 0, "food", 33);
	
	this.type = 3;
	this.time = 0;
	
}

Food.prototype = new Sprite();

Food.prototype.init = function()
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");
	graphics.clearRect(this.x + offerX,this.y + offerY,30,28);
	
	this.type = parseInt(Math.random() * 6);
	//if(this.type == 0 || this.type == 4) {this.init();}
	this.x = parseInt(Math.random() * 384);
	this.y = parseInt(Math.random() * 384);

	myCanvas.dirty = true;
};

Food.prototype.draw = function()
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	var frame =parseInt(this.time/30);
	if(frame % 2) 
	{
		graphics.drawImage(img,30 * this.type + images[this.src][0], images[this.src][1], 30, 28, this.x + offerX, this.y + offerY, 30, 28) ;
	}	
	else 
	{
		graphics.clearRect(this.x + offerX,this.y + offerY,30,28);
	}

	myCanvas.dirty = true;
};

Food.prototype.updata = function()
{
	this.time ++;
};



function drawFood()
{
	food.draw("upp");
}

function updataFood()
{
	food.updata();
	
	for(var i = 0 ; i < playerNum; i ++)
	{
		if(tanks[i].hitTestObject(food))
		{
		
			switch(food.type)
			{
				case foodLife: 	tanks[i].live ++;
								scoreBoard.drawPlayerLife(tanks[i].name,tanks[i].live);
							   break;
				case foodGod:  tanks[i].godTime = 600;
							   tanks[i].isGod = true;
							   break;
				case foodHome: changeHome(true);
							   break;
				case foodStar: tanks[i].shotSpeed -= 10;
							   if(tanks[i].shotSpeed < 10) tanks[i].shotSpeed = 10;
							   break;
				case foodTime: stopTime = 800;
							   break;
				case foodBomb: tanksBomb(true);
							   break;
				default: return;
			}
			var temp = new Score(food.x + 15,food.y + 15,500);
			scoreNums.push(temp);
			
			tanks[i].score ++;
		    sound.play("food");
			food.type = foodNon;
		}
	}
	
	if(homeTime == 0) {changeHome(false);}
	if(homeTime >= 0) {homeTime--;}
}

//ScoreBoard.js

function ScoreBoard()
{
	this.xx = images["tankNum"][0];
	this.yy = images["tankNum"][1];
}


ScoreBoard.prototype.drawPlayerLife = function(player, life)
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	if (player == 2)
	{
		num.draw("upp", 482, 320, life, true);
	}
	else 
	{
		num.draw("upp", 482, 272, life, true);
	}

	myCanvas.dirty = true;
};



ScoreBoard.prototype.drawPlayers = function()
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	graphics.drawImage(img, this.xx, this.yy, 30, 32, 464, 256, 30, 32);//player1
	
	if(playerNum == 2) 
	{
		graphics.drawImage(img, 30 + this.xx, this.yy, 30, 32, 464, 304, 30, 32);//player2
	}
	
	graphics.drawImage(img, 60 + this.xx, this.yy, 30, 32, 464, 352, 32, 30);//画旗帜
};



ScoreBoard.prototype.drawTankNum = function()
{
	var myCanvas = document.getElementById("upp");
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	var i, x, y, tx, ty;
	
	graphics.clearRect(466, 34, 32, 160);
	
	x = 466;
	y = 34; 
	
	for(i = 0; i < 20 - tankNum; i++)
	{
		if(i % 2 == 0) 
		{
			tx = 0;
		}
		else 
		{
			tx = 16;
		}
		
		ty = parseInt( i / 2) * 16;
		
		graphics.drawImage(img, 92 + this.xx, this.yy, 14, 14, x + tx, y + ty, 14, 14);
	}
};


ScoreBoard.prototype.draw = function()
{
	for(var i = 0; i < playerNum; i ++)
	{
		this.drawPlayerLife(tanks[i].name, tanks[i].live);
	}
	
	this.drawPlayers();
	this.drawTankNum();
	this.drawLevel();
};

ScoreBoard.prototype.drawLevel = function()
{
	num.draw("upp", 468, 384, level, true);
};



//Score.js

function Score(x, y, num)
{ 
	Sprite.call(this, x, y, "score", 1);
	
	this.num = num;
	this.time = 0;
}

Score.prototype = new Sprite();

Score.prototype.draw = function (canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	var sc;

	if (this.num == 100) {sc = 0; } 
	else if (this.num == 200) {sc = 14; }
	else if (this.num == 400) {sc = 28; }
	else if (this.num == 500) {sc = 42; }
	else {return;}
	
	graphics.drawImage(img, images[this.src][0], sc + images[this.src][1], 28, 14, this.x + offerX  - 14, this.y + offerY  - 7, 28, 14 ) ;	
	
	myCanvas.dirty = true;
};

Score.prototype.updata = function()
{
	this.time ++;
};

Score.prototype.clear = function(canvas)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	
	graphics.clearRect(this.x + offerX  - 14, this.y + offerY  - 7, 28, 14);

	myCanvas.dirty = true;
};


function drawScoreNums()
{
	for(var i = 0;i < scoreNums.length; i ++)
	{
		scoreNums[i].draw("upp");
		scoreNums[i].updata();
		
		if(scoreNums[i].time >30 )
		{
			scoreNums[i].clear("upp");
			
			scoreNums.splice(i,1);
			i --;
		}
	}
}


//Num.js

function Num()
{
	this.src = "num";
}

Num.prototype.draw = function(canvas, x, y, num, type)
{
	var myCanvas = document.getElementById(canvas);
	var graphics = myCanvas.getContext("2d");
	var img = document.getElementById("tankAll");
	
	if(num < 0) {num = 0;}
	
	var temp = num;
	var len = 0;
	var no = 0;
	
	var numx = images[this.src][0];
	var numy = images[this.src][1];
	
	if(type && num != 0)
	{
		while( temp != 0 )
		{
			temp =parseInt(temp / 10) ;
			len ++;
		}	
		x += ( (len - 1)  * 16 - 2 );
	}
	do
	{
		no = num % 10 ;
		graphics.clearRect(x , y , 14, 14) ;	
		graphics.drawImage(img,no * 14 + numx, numy, 14, 14, x ,y , 14, 14) ;	
		x -= 16 ;
		num = parseInt(num / 10);
	}while( num != 0 );
	
	myCanvas.dirty = true;
};


//Main.js

var key = {};													//保存按键信息

var num = new Num();											//一切数字
var stageStart = new StageStart();								//关卡开始
var gamesOver = new GameOver();									//游戏结束
var gameStart = new GameStart();
var food = new Food();											//奖励
var tankRun = new TankRun();

var scoreBoard = new ScoreBoard();
var sound = new Sound();
var firstLife = 3;

var time;														
var tankNum = 0;												//坦克出现数											
var level = 1;													//关卡

var playerNum = 1;


var stopTime;													//暂停时间
var homeTime;													//家无敌时间

var startLocation = [192,0,384];								//坦克出现位置
	
var rendercanvas;
var layers = []; //canvas array

var tanks = [];													//坦克数组									
var bullets = [];												//子弹数组
var hitFxs = [];												//子弹爆炸数组
var bombFxs = [];												//坦克爆炸数组
var tankStarts = [];											//坦克开始数组
var scoreNums = [];

var player1,player2;

var gameState = STATE_GAMESTART; 

function main()
{
	//+ouley
	hn.gui.init();

	var ids = ["wall", "main", "grass", "upp", "stage"];
	for (var i = 0, l = ids.length;  i < l; i++) {
		var canvas = document.getElementById(ids[i]);
		var w = canvas.getAttribute("width");
		var h = canvas.getAttribute("height");
		w && (canvas.width = w);
		h && (canvas.height = h);
		canvas.style.visibility = "hidden";
		layers.push(canvas);
	}

	//+ouley
	rendercanvas = document.getElementById("render");
	var w = rendercanvas.getAttribute("width");
	var h = rendercanvas.getAttribute("height");
	w && (rendercanvas.width = w);
	h && (rendercanvas.height = h);
	rendercanvas.style.width = window.innerWidth + "px";
	rendercanvas.style.height = window.innerHeight + "px";

	var images = [
		{id: "menu", src: "assets/menu.jpg"}, 
		{id: "tankAll", src: "assets/tankAll.png"}
	];
	for (var i = 0, l = images.length; i < l; i++) {
		var image = document.getElementById(images[i].id);
		image.onload = onloadAsset;
		image.src = images[i].src;
	}
	
	var sounds = ["attack", "bomb0", "bomb1", "food", "stageStart", "shootOver"];
	for (var i = 0, l = sounds.length; i < l; i++) {
		var audio = document.getElementById(sounds[i]);
		audio.preload = "auto";
		audio.addEventListener("canplaythrough", onloadAsset);
		audio.src = "assets/" + sounds[i] + ".mp3";
	}

}


var assetCount = 0;

function onloadAsset() {
	if (++assetCount == 8) {
		requestAnimationFrame(loop);
	}
}

function loop()
{
	switch (gameState)
	{
		case STATE_PLAY:
			draw();
			updata();
			break;
		
		case STATE_INIT:
			initGame();
			break;
		
		case STATE_STAGE_INIT:
			stageStart.draw("stage");
			break;
		
		case STATE_GAMEOVER:
			draw();
			updata();
			gameOver();
			break;
		
		case STATE_SELECT:
			tankRun.draw();
			break;
		
		case STATE_GAMESTART:
			gameStart.draw();
			break;			
	}

	//+ouley
	var ctx = rendercanvas.getContext("2d");
	for (var i = 0, l = layers.length;  i < l; i++) {
		var layer = layers[i];
		if (layer.dirty) {
			//layer.dirty = false;
			ctx.drawImage(layer, 0, 0);
		}
	}

	//+ouley
	//hn.gui.render(ctx);

	requestAnimationFrame(loop);
}


window.addEventListener('keydown', function(e) 
{
	e.preventDefault();
	key[e.keyCode] = true;
	
	if(e.keyCode == K_N &&  (gameState == STATE_PLAY || gameState == STATE_STAGE_INIT) ) nextStage();
	if(e.keyCode == K_M &&  (gameState == STATE_PLAY) )food.init();
	
	else if(e.keyCode == K_UP && gameState == STATE_SELECT) {tankRun.next(-1);}
	else if(e.keyCode == K_DOWN && gameState == STATE_SELECT) {tankRun.next(1);}
	
	if( (e.keyCode == K_SPACE || e.keyCode == K_ENTER) && gameState == STATE_SELECT)
	{
		if(tankRun.num == 0) { playerNum = 1;}
		else if(tankRun.num == 1) { playerNum = 2;}
		else 
		{
			return;
		}
		
		gameState = STATE_INIT;
		tankRun.init();
		clear("upp");

		//+ouley
		hn.gui.pushLayer("game");
	}
});


window.addEventListener('keyup',function(e) 
{
	key[e.keyCode] = false;
});

function gameOver()
{
	gamesOver.draw();
}

function init()
{
	selectMap(level);	
	drawAll();
}

function initMyTank(num)
{
	if(num == 1 && player1.live > 0)
	{
		player1.x = 129;
		player1.y = 385;
		player1.dir = UP;
		player1.godTime = 300;
		player1.isGod = true;
	}
	else if(num == 2 && player2.live > 0)
	{
		player2.x = 256;
		player2.y = 385;
		player2.dir = UP;
		player2.godTime = 300;
		player2.isGod = true;
	}
}

function initGame()
{
	player1 = null;
	player2 = null;
	tanks = [];
	key = {};
	
	addTank(129,385,0,1);	
	player1 = tanks[0];
	
	if(playerNum == 2)
	{
		addTank(256,385,0,2);	
		player2 = tanks[1];
	}
	
	for(var i = 0; i < playerNum; i ++)
	{
		tanks[i].live =firstLife;
		tanks[i].score = 0;
	}
	
	level = 1;
	initStage();
	
}

function initStage()
{
	time = -20;

	tankNum = 0;
	stopTime = 0;
	homeTime = 0;
	
	clearStage();
	food.type = foodNon;
	for(var i = 0; i < playerNum ; i ++)
	{
		initMyTank(tanks[i].name);
	}	
	
	stageStart.init();
	gameState = STATE_STAGE_INIT;
}

function clearStage()
{
	tankStarts = [];
	bullets = [];
	tanksBomb(false);
	hitFxs = [];
	bombFxs = [];
}

function addTank(x, y, type, name)
{
	var tank;
	switch(type)
	{
		case 0: tank = new MyTank(x,y);
				break;
		case 1: tank = new Tank1(x,y);
				break;
		case 2: tank = new Tank2(x,y);
				break;
		case 3: tank = new Tank3(x,y);
				break;
	}
	if(tank.type == 0) {tank.name = name;}
	tanks.push(tank);
}

function addTankStart(x, y)
{
	var tankStart = new TankStart(x, y);

	tankStarts.push(tankStart);

	tankNum ++;
	scoreBoard.drawTankNum();
}

function addTanks()
{
	var i;
	time ++;
	if(time % 300 == 1)
	{
		i = parseInt(time/300);
		
		if(tanks.length < 5 && tankNum < 20) 
		{
			if(tankNum % 4 == 2) food.init();
			addTankStart(startLocation[i], 0);
		}
	}
	if(i == 2) 
	{
		time = -299;
	}
}

function drawAll()
{
	drawMap();	
	drawGrass();
}

function clear(whichCanvas)
{	
	var myCanvas = document.getElementById(whichCanvas);
	var graphics = myCanvas.getContext("2d");
	
	graphics.clearRect(0,0,512,448);
}




function keyboardEvent()
{
	
	for(var i = 0; i < playerNum; i ++)
	{
		if(tanks[i].live == 0) {continue;}
		
		if(tanks[i].name == 1)
		{
			if(key[K_UP]) {player1.move(UP);}
			else if(key[K_DOWN]) {player1.move(DOWN);}
			else if(key[K_LEFT]) {player1.move(LEFT);}
			else if(key[K_RIGHT]) {player1.move(RIGHT);}
			if(key[K_SPACE]) {player1.shot();}
		}
		
		else if(tanks[i].name == 2)
		{
			if(key[K_W]) {player2.move(UP);}
			else if(key[K_S]) {player2.move(DOWN);}
			else if(key[K_A]) {player2.move(LEFT);}
			else if(key[K_D]) {player2.move(RIGHT);}
		
			if(key[K_J]) {player2.shot();}
		}
	}
}

function updata()
{
	updataHitFxs();
	updataBombFxs();
	updataBullets();
	updataTanks();
	updataTankStarts();
	updataFood();
	addTanks();
	
	keyboardEvent();
}



function draw()
{
	clear("main");
	drawHitFxs();
	drawBombFxs();
	drawTanks();
	drawBullets();
	drawTankStarts();
	drawFood();
	drawScoreNums();
}




function tanksBomb(isBomb)
{
	while(tanks.length > playerNum)
	{
		var xx = tanks[playerNum].x;
		var yy = tanks[playerNum].y;
		
		if(isBomb)
		{
			var bombFx = new BombFx(xx,yy,tanks[playerNum].score);
			bombFxs.push(bombFx);
			sound.play("bomb1");
		}
		tanks.splice(playerNum,1);
	}
}

function changeHome(god)
{
	var wallType;
	if(god) 
	{
		wallType = GRID;
		homeTime = 1000;
	}
	
	else 
	{
		wallType = WALL;
	}
	map[23][11] = map[23][12] = map[23][13] = 
	map[23][14] = map[24][11] = map[24][14] = 
	map[25][11] = map[25][14] = wallType;
	
	drawMap();
}

function nextStage()
{
	level ++;
	initStage();
}




